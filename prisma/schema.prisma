generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  name        String
  password    String
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  userCreatorClient Client[]   @relation("user_creator_client")
  userUpdaterClient Client[]   @relation("user_updater_client")

  userCreatorProject Project[]   @relation("user_creator_project")
  userUpdaterProject Project[]   @relation("user_updater_project")

  userCreatorComment Comment[]   @relation("user_creator_comment")
  userUpdaterComment Comment[]   @relation("user_updater_comment")
}


model Client {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  phone       String    
  email       String
  status      String
  birthdate   DateTime   @db.Date
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  createdById Int
  createdBy   User       @relation(fields: [createdById], references: [id], name: "user_creator_client")
  updatedAt   DateTime   @updatedAt
  updatedById Int?
  updatedBy   User?      @relation(fields: [updatedById], references: [id], name: "user_updater_client")

  projects  Project[]
  comments  Comment[]
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  createdById Int
  createdBy   User       @relation(fields: [createdById], references: [id], name: "user_creator_project")
  updatedAt   DateTime   @updatedAt
  updatedById Int?
  updatedBy   User?      @relation(fields: [updatedById], references: [id], name: "user_updater_project")

  clients   Client[]
}


model Comment {
  id        Int  @id @default(autoincrement())
  comment   String
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  createdById Int
  createdBy   User       @relation(fields: [createdById], references: [id], name: "user_creator_comment")
  updatedAt   DateTime   @updatedAt
  updatedById Int?
  updatedBy   User?      @relation(fields: [updatedById], references: [id], name: "user_updater_comment")

  client    Client       @relation(fields: [clientId], references: [id])
  clientId  Int
}


